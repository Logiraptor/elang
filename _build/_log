### Starting build.
# Target: src/main.ml.depends, tags: { extension:ml, file:src/main.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/main.ml > src/main.ml.depends # cached
# Target: src/compiler.ml.depends, tags: { extension:ml, file:src/compiler.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/compiler.ml > src/compiler.ml.depends # cached
# Target: src/loader.ml.depends, tags: { extension:ml, file:src/loader.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/loader.ml > src/loader.ml.depends # cached
# Target: src/ast.ml.depends, tags: { extension:ml, file:src/ast.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/ast.ml > src/ast.ml.depends # cached
# Target: src/ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/ast.cmo, file:src/ast.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/ast.cmo src/ast.ml # cached
# Target: src/elang_lex.mll, tags: { extension:mll, file:src/elang_lex.mll, lexer, ocaml, ocamllex, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
/usr/bin/ocamllex.opt -q src/elang_lex.mll # cached
# Target: src/elang_lex.ml.depends, tags: { extension:ml, file:src/elang_lex.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/elang_lex.ml > src/elang_lex.ml.depends # cached
# Target: src/elang_parser.mly.depends, tags: { extension:mly, file:src/elang_parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
menhir --table --raw-depend --ocamldep 'ocamlfind ocamldep -modules' src/elang_parser.mly > src/elang_parser.mly.depends # cached
# Target: src/elang_parser.mly, tags: { byte, compile, extension:ml, extension:mly, file:src/elang_parser.ml, file:src/elang_parser.mly, infer, menhir, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), parser, quiet, thread, traverse, use_menhir }
menhir --table --ocamlc 'ocamlfind ocamlc -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src' --infer src/elang_parser.mly # cached
# Target: src/elang_parser.mli.depends, tags: { extension:mli, file:src/elang_parser.mli, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/elang_parser.mli > src/elang_parser.mli.depends # cached
# Target: src/elang_parser.cmi, tags: { byte, compile, extension:mli, file:src/elang_parser.mli, interf, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/elang_parser.cmi src/elang_parser.mli # cached
# Target: src/elang_lex.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/elang_lex.cmo, file:src/elang_lex.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/elang_lex.cmo src/elang_lex.ml # cached
# Target: src/error_messages.ml.depends, tags: { extension:ml, file:src/error_messages.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/error_messages.ml > src/error_messages.ml.depends # cached
# Target: src/error_messages.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/error_messages.cmo, file:src/error_messages.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/error_messages.cmo src/error_messages.ml # cached
# Target: src/loader.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/loader.cmo, file:src/loader.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/loader.cmo src/loader.ml # cached
# Target: src/compiler.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/compiler.cmo, file:src/compiler.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/compiler.cmo src/compiler.ml # cached
# Target: src/interpreter.ml.depends, tags: { extension:ml, file:src/interpreter.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/interpreter.ml > src/interpreter.ml.depends # cached
# Target: src/interpreter.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/interpreter.cmo, file:src/interpreter.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/interpreter.cmo src/interpreter.ml # cached
# Target: src/language.ml.depends, tags: { extension:ml, file:src/language.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/language.ml > src/language.ml.depends # cached
# Target: src/language.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/language.cmo, file:src/language.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/language.cmo src/language.ml # cached
# Target: src/main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/main.cmo, file:src/main.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/main.cmo src/main.ml # cached
# Target: src/ast.cmx, tags: { compile, extension:cmx, extension:ml, file:src/ast.cmx, file:src/ast.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/ast.cmx src/ast.ml # cached
# Target: src/elang_parser.ml.depends, tags: { extension:ml, file:src/elang_parser.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -modules src/elang_parser.ml > src/elang_parser.ml.depends # cached
# Target: src/elang_parser.cmx, tags: { compile, extension:cmx, extension:ml, file:src/elang_parser.cmx, file:src/elang_parser.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/elang_parser.cmx src/elang_parser.ml # cached
# Target: src/elang_lex.cmx, tags: { compile, extension:cmx, extension:ml, file:src/elang_lex.cmx, file:src/elang_lex.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/elang_lex.cmx src/elang_lex.ml # cached
# Target: src/error_messages.cmx, tags: { compile, extension:cmx, extension:ml, file:src/error_messages.cmx, file:src/error_messages.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/error_messages.cmx src/error_messages.ml # cached
# Target: src/loader.cmx, tags: { compile, extension:cmx, extension:ml, file:src/loader.cmx, file:src/loader.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/loader.cmx src/loader.ml # cached
# Target: src/compiler.cmx, tags: { compile, extension:cmx, extension:ml, file:src/compiler.cmx, file:src/compiler.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/compiler.cmx src/compiler.ml # cached
# Target: src/interpreter.cmx, tags: { compile, extension:cmx, extension:ml, file:src/interpreter.cmx, file:src/interpreter.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/interpreter.cmx src/interpreter.ml # cached
# Target: src/language.cmx, tags: { compile, extension:cmx, extension:ml, file:src/language.cmx, file:src/language.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/language.cmx src/language.ml # cached
# Target: src/main.cmx, tags: { compile, extension:cmx, extension:ml, file:src/main.cmx, file:src/main.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib -I src -o src/main.cmx src/main.ml # cached
# Target: src/main.native, tags: { dont_link_with, extension:native, file:src/main.native, link, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(menhirLib), package(ppx_custom_printf), package(ppx_sexp_conv), package(sexplib), program, quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -linkpkg -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -package ppx_custom_printf -package menhirLib src/ast.cmx src/elang_parser.cmx src/elang_lex.cmx src/error_messages.cmx src/loader.cmx src/compiler.cmx src/interpreter.cmx src/language.cmx src/main.cmx -o src/main.native # cached
# Compilation successful.
