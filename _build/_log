### Starting build.
# Target: test/test.ml.depends, tags: { extension:ml, file:test/test.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules test/test.ml > test/test.ml.depends # cached
# Target: test/codegen_test.ml.depends, tags: { extension:ml, file:test/codegen_test.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules test/codegen_test.ml > test/codegen_test.ml.depends # cached
# Target: src/codegen.ml.depends, tags: { extension:ml, file:src/codegen.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules src/codegen.ml > src/codegen.ml.depends # cached
# Target: src/datatypes.ml.depends, tags: { extension:ml, file:src/datatypes.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules src/datatypes.ml > src/datatypes.ml.depends # cached
# Target: src/datatypes.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/datatypes.cmo, file:src/datatypes.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/datatypes.cmo src/datatypes.ml # cached
# Target: src/sigs.ml.depends, tags: { extension:ml, file:src/sigs.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules src/sigs.ml > src/sigs.ml.depends # cached
# Target: src/sigs.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/sigs.cmo, file:src/sigs.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/sigs.cmo src/sigs.ml # cached
# Target: src/codegen.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/codegen.cmo, file:src/codegen.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/codegen.cmo src/codegen.ml # cached
# Target: test/mocks.ml.depends, tags: { extension:ml, file:test/mocks.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules test/mocks.ml > test/mocks.ml.depends # cached
# Target: test/mocks.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test/mocks.cmo, file:test/mocks.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/mocks.cmo test/mocks.ml # cached
# Target: test/spec.ml.depends, tags: { extension:ml, file:test/spec.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules test/spec.ml > test/spec.ml.depends # cached
# Target: test/spec.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test/spec.cmo, file:test/spec.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/spec.cmo test/spec.ml # cached
# Target: test/codegen_test.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test/codegen_test.cmo, file:test/codegen_test.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/codegen_test.cmo test/codegen_test.ml # cached
# Target: test/interp_test.ml.depends, tags: { extension:ml, file:test/interp_test.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules test/interp_test.ml > test/interp_test.ml.depends # cached
# Target: src/interp.ml.depends, tags: { extension:ml, file:src/interp.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules src/interp.ml > src/interp.ml.depends # cached
# Target: src/interp.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/interp.cmo, file:src/interp.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/interp.cmo src/interp.ml # cached
# Target: src/vM.ml.depends, tags: { extension:ml, file:src/vM.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules src/vM.ml > src/vM.ml.depends # cached
# Target: src/vM.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/vM.cmo, file:src/vM.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/vM.cmo src/vM.ml # cached
# Target: test/interp_test.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test/interp_test.cmo, file:test/interp_test.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/interp_test.cmo test/interp_test.ml # cached
# Target: test/vMTest.ml.depends, tags: { extension:ml, file:test/vMTest.ml, ocaml, ocamldep, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -modules test/vMTest.ml > test/vMTest.ml.depends # cached
# Target: test/vMTest.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test/vMTest.cmo, file:test/vMTest.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/vMTest.cmo test/vMTest.ml # cached
# Target: test/test.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test/test.cmo, file:test/test.ml, implem, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlc -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/test.cmo test/test.ml # cached
# Target: src/datatypes.cmx, tags: { compile, extension:cmx, extension:ml, file:src/datatypes.cmx, file:src/datatypes.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/datatypes.cmx src/datatypes.ml # cached
# Target: src/sigs.cmx, tags: { compile, extension:cmx, extension:ml, file:src/sigs.cmx, file:src/sigs.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/sigs.cmx src/sigs.ml # cached
# Target: src/codegen.cmx, tags: { compile, extension:cmx, extension:ml, file:src/codegen.cmx, file:src/codegen.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/codegen.cmx src/codegen.ml # cached
# Target: test/mocks.cmx, tags: { compile, extension:cmx, extension:ml, file:test/mocks.cmx, file:test/mocks.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/mocks.cmx test/mocks.ml # cached
# Target: test/spec.cmx, tags: { compile, extension:cmx, extension:ml, file:test/spec.cmx, file:test/spec.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/spec.cmx test/spec.ml # cached
# Target: test/codegen_test.cmx, tags: { compile, extension:cmx, extension:ml, file:test/codegen_test.cmx, file:test/codegen_test.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/codegen_test.cmx test/codegen_test.ml # cached
# Target: src/interp.cmx, tags: { compile, extension:cmx, extension:ml, file:src/interp.cmx, file:src/interp.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/interp.cmx src/interp.ml # cached
# Target: src/vM.cmx, tags: { compile, extension:cmx, extension:ml, file:src/vM.cmx, file:src/vM.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(ppx_sexp_conv), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I src -o src/vM.cmx src/vM.ml # cached
# Target: test/interp_test.cmx, tags: { compile, extension:cmx, extension:ml, file:test/interp_test.cmx, file:test/interp_test.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/interp_test.cmx test/interp_test.ml # cached
# Target: test/vMTest.cmx, tags: { compile, extension:cmx, extension:ml, file:test/vMTest.cmx, file:test/vMTest.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/vMTest.cmx test/vMTest.ml # cached
# Target: test/test.cmx, tags: { compile, extension:cmx, extension:ml, file:test/test.cmx, file:test/test.ml, implem, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -c -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv -I test -I src -o test/test.cmx test/test.ml # cached
# Target: test/test.native, tags: { dont_link_with, extension:native, file:test/test.native, link, native, ocaml, package(core), package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.executionengine), package(oUnit), package(ppx_sexp_conv), package(qcheck), package(sexplib), program, quiet, thread, traverse, use_menhir }
ocamlfind ocamlopt -linkpkg -thread -package oUnit -package qcheck -package core -package llvm -package llvm.bitreader -package llvm.executionengine -package llvm.analysis -package sexplib -package ppx_sexp_conv src/datatypes.cmx src/sigs.cmx src/codegen.cmx src/interp.cmx src/vM.cmx test/mocks.cmx test/spec.cmx test/codegen_test.cmx test/interp_test.cmx test/vMTest.cmx test/test.cmx -o test/test.native # cached
# Compilation successful.
